# -*- mode: ruby -*-
# vi: set ft=ruby :
#
SUBNET="10.0.10"
#

vmcount=1
Vagrant.configure(2) do |config|
  jenkins = "#{SUBNET}.100"
  subversion = "#{SUBNET}.150"

# Jenkins box
$jenkinsInstall= <<SCRIPT
systemctl stop chrony
systemctl stop ntp
wget -q -O - https://jenkins-ci.org/debian/jenkins-ci.org.key | sudo apt-key add -
sudo sh -c 'echo deb http://pkg.jenkins-ci.org/debian binary/ > /etc/apt/sources.list.d/jenkins.list'
sudo apt-get update -y
sudo apt-get install jenkins -y
sudo ssh-keygen -b 2048 -t rsa -f /root/.ssh/id_rsa -q -N ""
sudo cat /root/.ssh/id_rsa > /vagrant/sshkey
systemctl stop jenkins
systemctl start jenkins
SCRIPT

  config.vm.define "jenkins_server" do |j|
    j.vm.provider "virtualbox" do |v|
        v.name = "Jenkins"
    end
    j.vm.box = "mokote/debian-8"
    j.vm.network "private_network", ip: "#{jenkins}"
    j.vm.network :forwarded_port, guest: 8080, host: 8082
    j.vm.hostname = "jenkins.keef.local"
    j.vm.provision "shell", inline: $jenkinsInstall
  end

# subversion box
$subversionInstall= <<SCRIPT
sudo apt-get install subversion -y
sudo mkdir /svn-repo
sudo chmod 777 /svn-repo
sudo svnadmin create /svn-repo
sudo svnserve -d
sudo mkdir /root/.ssh/
sudo cat /vagrant/sshkey >> /root/.ssh/authorized_keys
SCRIPT

  config.vm.define "subversion_server" do |s|
    s.vm.provider "virtualbox" do |v|
        v.name = "Subversion"
    end
    s.vm.box = "mokote/debian-8"
    s.vm.network "private_network", ip: "#{subversion}"
    s.vm.network :forwarded_port, guest: 3690, host: 3690
    s.vm.hostname = "subversion.keef.local"
    s.vm.provision "shell", inline: $subversionInstall
  end

# generic clients
$clientInstall= <<SCRIPT
sudo yum install -y subversion ruby
sudo mkdir /root/.ssh/
sudo cat /vagrant/sshkey >> /root/.ssh/authorized_keys
SCRIPT

(1..vmcount.to_i).each do |host|
  hosts = "node#{host}.keef.local"
  config.vm.define hosts do |cl|
    cl.vm.provider "virtualbox" do |v|
        v.name = "Generic Client#{host}"
    end
    cl.vm.box = "bento/centos-7.1"
    cl.vm.hostname = hosts
    cl.vm.network "private_network", ip: "#{SUBNET}.#{host + 10}"
    cl.vm.provision "shell", inline: $clientInstall
  end
end
end
